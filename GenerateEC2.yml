Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Infrastructure Configuration"
        Parameters:
          - VPCId
          - EnvironmentSize
          - SSHkeyname
      -  
        Label:
          default: "Syslog Configuration"
        Parameters:
          - InstallSourceTdAgent
          - SyslogCollectInterval
          - SyslogUploadS3Interval
Parameters:
  SyslogCollectInterval:
    Type: String
    Default: "%Y%m%d%H"
    Description: syslog collection interval Unit by Hour-%Y%m%d%H, Minute-%Y%m%d%H%M
    AllowedValues:
      - "%Y%m%d%H"
      - "%Y%m%d%H%M"
  SyslogUploadS3Interval:
    Type: Number
    Default: 10
    MinValue: 5
    MaxValue: 60
    Description: syslog upload to S3 interval between 5 and 60 minutes
  InstallSourceTdAgent:
    Type: String
    Default: "curl -L https://toolbelt.treasuredata.com/sh/install-redhat-td-agent2.sh | sh"
    Description: Install td-agent from fluentd
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: Choose Default VPC
  SSHkeyname:
    Type: AWS::EC2::KeyPair::KeyName 
    Default: assignmentCFN
    Description: SSH Key for login EC2
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
      - SMALL
      - MEDIUM
      - LARGE
    Description: Select Environment Size (S-t2.micro,M-t2.small,L-t2.medium)
Mappings:
  RegionMap:
    ap-south-1: 
      "AMALINUX" : "ami-0400736b" #Amazon Linux AMI 2017.03
    eu-west-3: 
      "AMALINUX" : "ami-7bc17406" #Amazon Linux AMI 2017.03
    eu-west-2: 
      "AMALINUX" : "ami-11130775" #Amazon Linux AMI 2017.03
    eu-west-1: 
      "AMALINUX" : "ami-01ccc867" #Amazon Linux AMI 2017.03
    ap-northeast-2: 
      "AMALINUX" : "ami-8369baed" #Amazon Linux AMI 2017.03
    ap-northeast-1: 
      "AMALINUX" : "ami-10207a77" #Amazon Linux AMI 2017.03
    sa-east-1: 
      "AMALINUX" : "ami-1d660d71" #Amazon Linux AMI 2017.03
    ca-central-1: 
      "AMALINUX" : "ami-0bd66a6f" #Amazon Linux AMI 2017.03
    ap-southeast-1: 
      "AMALINUX" : "ami-3d8e325e" #Amazon Linux AMI 2017.03
    ap-southeast-2: 
      "AMALINUX" : "ami-10918173" #Amazon Linux AMI 2017.03
    eu-central-1: 
      "AMALINUX" : "ami-5b06d634" #Amazon Linux AMI 2017.03
    us-east-1: 
      "AMALINUX" : "ami-22ce4934" #Amazon Linux AMI 2017.03
    us-east-2: 
      "AMALINUX" : "ami-0d2a0e68" #Amazon Linux AMI 2017.03
    us-west-1: 
      "AMALINUX" : "ami-327f5352" #Amazon Linux AMI 2017.03
    us-west-2: 
      "AMALINUX" : "ami-463ab226" #Amazon Linux AMI 2017.03
  InstanceSize:
    SMALL:
      "EC2" : "t2.micro"
    MEDIUM:
      "EC2" : "t2.small"
    LARGE:  
      "EC2" : "t2.medium"
Resources:
  MyEC2:
    Type: AWS::EC2::Instance
    DeletionPolicy: Delete
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT5M
    Properties:
      IamInstanceProfile: !ImportValue sharedinf-SyslogRoleProfile 
      ImageId: !FindInMap [RegionMap,!Ref "AWS::Region","AMALINUX"] 
      InstanceType: !FindInMap [InstanceSize,!Ref EnvironmentSize, EC2]
      KeyName: !Ref SSHkeyname
      SecurityGroupIds: 
        - !Ref SecurityGroup 
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -ex
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyEC2 --configsets tdagent --region ${AWS::Region}
            yum -y update
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource MyEC2 --region ${AWS::Region}
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          tdagent:
            - "configure_cfn"
            - "remove_NTP"
            - "install_chrony"
            - "config_OS"
            - "SyslogTotd-agent"
            - "install_td-agent"
            - "config_td-agent"
            - "restart-td-agent"
        configure_cfn:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.MyEC2.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyEC2 --configsets tdagent --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub | 
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"  
        remove_NTP:
          test: "test $(rpm -qa|grep ntp)"
          commands:
            remove_ntp_packages:
              command: "yum -y remove ntp*"
        install_chrony:
          test: "test ! $(rpm -qa|grep chrony)"
          packages:
            yum:
              chrony: []
          services:
            sysvinit:
              chronyd:
                enabled: "true"
                ensureRunning: "true"
        config_OS:
          commands:
            01_increase_max_file_descriport:
              test: "test $(grep -i '#add by CFN' /etc/security/limits.conf|wc -l) -lt 1"
              command: "echo -e \"$ADD_CONTENT\" >> limits.conf"
              env: 
                ADD_CONTENT: "#add by CFN\n
                              root soft nofile 65536\n
                              root hard nofile 65536\n
                              * soft nofile 65536\n
                              * hard nofile 65536\n
                             "
              cwd: "/etc/security"
            02_apply_change: # apply limits.conf without reboot
              test: "test $(grep -i '#add by CFN' /etc/pam.d/common-session|wc -l) -lt 1"
              command: "echo -e \"$ADD_CONTENT\" >> common-session"
              env:
                ADD_CONTENT: "#add by CFN\n
                              session required pam_limits.so\n
                             "
              cwd: "/etc/pam.d"
            03_optimize_network_kernel_parameters:
              test: "test $(grep -i '#add by CFN' /etc/sysctl.conf|wc -l) -lt 1"
              command: "echo -e \"$ADD_CONTENT\" >> sysctl.conf"
              env:
                ADD_CONTENT: "#add by CFN\n
                              net.core.somaxconn = 1024\n
                              net.core.netdev_max_backlog = 5000\n
                              net.core.rmem_max = 16777216\n
                              net.core.wmem_max = 16777216\n
                              net.ipv4.tcp_wmem = 4096 12582912 16777216\n
                              net.ipv4.tcp_rmem = 4096 12582912 16777216\n
                              net.ipv4.tcp_max_syn_backlog = 8096\n
                              net.ipv4.tcp_slow_start_after_idle = 0\n
                              net.ipv4.tcp_tw_reuse = 1\n
                              net.ipv4.ip_local_port_range = 10240 65535\n
                             "
              cwd: "/etc"
            04_active_change: # active change sysctl.conf without reboot
              command: "sysctl -p"
              cwd: "/etc"
        SyslogTotd-agent:
          commands:
            syslog_forward_to_td-agent:
              test: "test $(grep -i '#add by CFN' /etc/rsyslog.conf|wc -l) -lt 1"
              command: "echo -e \"$ADD_CONTENT\" >> rsyslog.conf"
              env:
                ADD_CONTENT: "#add by CFN\n
                              *.* @127.0.0.1:42185\n
                             "
              cwd: "/etc"  
          services:
            sysvinit:
              rsyslog:
                ensureRunning: "true"
                files: ["/etc/rsyslog.conf"]
        install_td-agent:
          commands:
            install:
              test: "test ! $(rpm -qa|grep td-agent)" 
              command: !Sub |
                ${InstallSourceTdAgent}
              cwd: "~"
        config_td-agent:
          test: "test $(grep -i '#add by CFN' /etc/td-agent/td-agent.conf|wc -l) -lt 1"
          files:
            /etc/td-agent/td-agent.conf:
              content: !Sub  
                - "<source>\n 
                   @type syslog \n
                   port 42185\n 
                   tag system \n
                   </source>\n
                   \n
                   <match system.**>\n
                    @type s3\n
                   s3_bucket ${BucketName} \n
                    s3_region ${BucketRegion} \n
                    path Token_path/\n
                    buffer_path /var/log/td-agent/buffer\n
                    time_slice_format ${SyslogCollectInterval}\n
                    time_slice_wait ${SyslogUploadS3Interval}m\n
                  </match>\n"
                - { BucketName: !ImportValue sharedinf-SyslogBucketName,BucketRegion: !ImportValue sharedinf-SyslogBucketRegion }
              mode: "00644"
              owner: root
              group: root
          commands:
            fillout_instance_id:
              command: "sed -i \"s/Token_path/$(curl 169.254.169.254/latest/meta-data/instance-id)/g\" /etc/td-agent/td-agent.conf "
              cwd: "~"
        restart-td-agent:
          services:
            sysvinit:
              td-agent:
                enabled: "true"
                ensureRunning: "true"
                files: ["/etc/td-agent/td-agent.conf"]
          commands:
            trigger_syslog_service:
              command: " service td-agent restart;service rsyslog restart"
              cwd: "~"
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Only Open SSH port"
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          ToPort: "22"
          FromPort: "22"
      SecurityGroupEgress:
        -
          CidrIp: 0.0.0.0/0
          ToPort: "-1"
          IpProtocol: "-1"
Outputs:
  EC2IPAddress:
    Description: EC2 IP Address
    Value: !Join ["",["EC2 Public IP address: ",!GetAtt MyEC2.PublicIp]]
  InstanceID:
    Description: EC2 Instance ID
    Value: !Ref MyEC2 
  TestOutput:
    Description: Test Output
    Value: !ImportValue sharedinf-SyslogBucketRegion 