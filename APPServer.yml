Parameters:
  sshkeyname:
    Type: String 
    Default: assignmentCFN
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
      - SMALL
      - MEDIUM
      - LARGE
    Description: Select Environment Size (S,M,L)
Mappings:
  RegionMap:
    us-east-1:
      "AMALINUX" : "ami-04351e12" #Amazon Linux AMI 2017.03
    us-east-2:
      "AMALINUX" : "ami-1c002379" #Amazon Linux AMI 2017.03
    us-west-1:
      "AMALINUX" : "ami-14b89b74" #Amazon Linux AMI 2017.03
    us-west-2:
      "AMALINUX" : "ami-11120768" #Amazon Linux AMI 2017.03
    eu-west-2:
      "AMALINUX" : "ami-0a85946e" #Amazon Linux AMI 2017.03
    eu-west-1:
      "AMALINUX" : "ami-13f7226a" #Amazon Linux AMI 2017.03
    ap-northeast-2:
      "AMALINUX" : "ami-7ee13b10" #Amazon Linux AMI 2017.03
    ap-northeast-1:
      "AMALINUX" : "ami-21815747" #Amazon Linux AMI 2017.03
    ca-central-1:
      "AMALINUX" : "ami-32bb0556" #Amazon Linux AMI 2017.03
    ap-southeast-1:
      "AMALINUX" : "ami-1926ab7a" #Amazon Linux AMI 2017.03
    ap-southeast-2:
      "AMALINUX" : "ami-42e9f921" #Amazon Linux AMI 2017.03
    eu-central-1:
      "AMALINUX" : "ami-0460cb6b" #Amazon Linux AMI 2017.03   
  InstanceSize:
    SMALL:
      "EC2" : "t2.micro"
    MEDIUM:
      "EC2" : "t2.small"
    LARGE:  
      "EC2" : "t2.medium"
Resources:
  EC2:
    Type: AWS::EC2::Instance
    DeletionPolicy: Delete
    #CreationPolicy:
    #  ResourceSignal:
    #    Timeout: PT5M
    Properties:
      ImageId: !FindInMap [RegionMap,!Ref "AWS::Region","AMALINUX"] 
      InstanceType: !FindInMap [InstanceSize,!Ref EnvironmentSize, EC2]
      KeyName: !Ref sshkeyname
      SecurityGroupIds: 
        - !Ref SecurityGroup 
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -ex
            yum install -y aws-cfn-bootstrap
            yum update -y aws-cfn-bootstrap #good
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets tdagent --region ${AWS::Region}
            yum -y update
            yum -y erase ntp*
            #/opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2 --region ${AWS::Region}
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          tdagent:
            - "configure_cfn"
        configure_cfn:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets tdagent --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub | 
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"  
#       install_fluentd:
#         packages:
#           yum:
#             chrony: []
#         files:
#           /etc/chrony.conf:
#             content: 
#               "server 169.254.169.123 prefer iburst"
#         services:
#           sysvinit:
#             chronyd:
#               enabled: "true"
#               ensureRunning: "true"
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Only Open SSH port"
      VpcId: vpc-23242758
      SecurityGroupIngress:
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          ToPort: "22"
          FromPort: "22"
      SecurityGroupEgress:
        -
          CidrIp: 0.0.0.0/0
          ToPort: "-1"
          IpProtocol: "-1"
Outputs:
  assignmentEC2:
    Description: Access URL for assignmentEC2
    Value: !Join ["",["EC2 Public IpAddress:",!GetAtt EC2.PublicIp]]
